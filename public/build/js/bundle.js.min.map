{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrado","listadoPonentes","ponenteHidden","seleccionarPonente","ponentePrevio","ponente","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","key","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas){\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias =document.querySelectorAll('[name=dia');\r\n        const inputHiddenDia =document.querySelector('[name=dia_id');\r\n        const inputHiddenHora =document.querySelector('[name=hora_id');\r\n        \r\n        \r\n        categoria.addEventListener('change',terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change',terminoBusqueda));\r\n        \r\n        function terminoBusqueda(e){\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reinciar los campos ocultos\r\n            inputHiddenHora.value='';\r\n            inputHiddenDia.value='';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')){\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitado'));\r\n\r\n            //Comporbar eventos ya tomados\r\n            const horasTomadas =eventos.map(evento => evento.hora_id);\r\n      \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId));\r\n           \r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitado'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitado)');\r\n            \r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Desahibilitar la hora previa\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            //Agregar la clase seleccionada\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n           \r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n  const ponentesInput = document.querySelector(\"#ponente\");\r\n\r\n  if (ponentesInput) {\r\n    let ponentes = [];\r\n    let ponentesFiltrado = [];\r\n    const listadoPonentes = document.querySelector('#listado-ponentes');\r\n    const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n    obtenerPonentes();\r\n    ponentesInput.addEventListener(\"input\", buscarPonentes);\r\n\r\n    async function obtenerPonentes() {\r\n      const url = `/api/ponentes`;\r\n\r\n      const respuesta = await fetch(url);\r\n      const resultado = await respuesta.json();\r\n\r\n      formatearPonentes(resultado);\r\n    }\r\n\r\n    function formatearPonentes(arrayPonentes = []) {\r\n      ponentes = arrayPonentes.map((ponente) => {\r\n        return {\r\n          nombre: `${ponente.nombre.trim()} ${ponente.apellido}`,\r\n          id: ponente.id,\r\n        };\r\n      });\r\n    }\r\n\r\n    function buscarPonentes(e) {\r\n      const busqueda = e.target.value;\r\n      if (busqueda.length > 3) {\r\n        const expresion = new RegExp(busqueda, \"i\");\r\n        ponentesFiltrado = ponentes.filter((ponente) => {\r\n          if (ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n            return ponente;\r\n          }\r\n        });\r\n        \r\n       \r\n      }else{\r\n        ponentesFiltrado=[];\r\n      }\r\n\r\n      mostrarPonentes();\r\n    }\r\n\r\n    function mostrarPonentes(){\r\n        while(listadoPonentes.firstChild){\r\n            listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n        }\r\n\r\n        if(ponentesFiltrado.length >0){\r\n            ponentesFiltrado.forEach(ponente =>{\r\n                const ponenteHTML = document.createElement('LI');\r\n                ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                ponenteHTML.textContent = ponente.nombre;\r\n                ponenteHTML.dataset.ponenteId = ponente.id\r\n\r\n                ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                //Añadir al DOM\r\n    \r\n                listadoPonentes.appendChild(ponenteHTML);\r\n            })\r\n        }else{\r\n            const noResultados = document.createElement('P');\r\n            noResultados.classList.add('listado-ponentes__no-resultado');\r\n            noResultados.textContent = 'No hay resultado para tu búsqueda';\r\n            listadoPonentes.appendChild(noResultados);\r\n        }\r\n        \r\n    }\r\n\r\n    function seleccionarPonente(e){\r\n\r\n        //Remover el previo\r\n        const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n        if(ponentePrevio){\r\n            ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n        }\r\n        const ponente = e.target;\r\n        ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n        ponenteHidden.value = ponente.dataset.ponenteId;\r\n    }\r\n  }\r\n})();\r\n","(function(){\r\n   const tagsInput = document.querySelector('#tags_input');\r\n\r\n   if(tagsInput){  \r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n        //Recuperar ddel input oculto\r\n        if(tagsInputHidden.value!==''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress',guardarTag);\r\n\r\n        function guardarTag(e){\r\n            if(e.key === ','){\r\n                if(e.target.value.trim()==='' || e.target.value < 1){\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n                \r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden();\r\n           }\r\n\r\n           function actualizarInputHidden(){\r\n             tagsInputHidden.value = tags.toString();\r\n           }\r\n\r\n           function eliminarTag(e){\r\n                e.target.remove();\r\n                tags = tags.filter(tag => tag !== e.target.textContent);\r\n                actualizarInputHidden();\r\n           }\r\n   }\r\n\r\n\r\n})()"]}